{
  "console": [
    {
      "type": "debug",
      "text": "[vite] connecting...",
      "timestamp": "2025-06-19T14:26:43.734Z"
    },
    {
      "type": "debug",
      "text": "[vite] connected.",
      "timestamp": "2025-06-19T14:26:43.737Z"
    },
    {
      "type": "error",
      "text": "Failed to load resource: the server responded with a status of 500 (Internal Server Error)",
      "timestamp": "2025-06-19T14:26:43.788Z",
      "analyzed": true
    },
    {
      "type": "log",
      "text": "DevTools Inspector: Monitoring started",
      "timestamp": "2025-06-19T14:26:44.414Z"
    },
    {
      "type": "log",
      "text": "[vite] server connection lost. Polling for restart...",
      "timestamp": "2025-06-19T14:30:06.840Z"
    },
    {
      "type": "error",
      "text": "Failed to load resource: net::ERR_CONNECTION_REFUSED",
      "timestamp": "2025-06-19T14:30:09.139Z",
      "analyzed": true
    },
    {
      "type": "debug",
      "text": "[vite] connecting...",
      "timestamp": "2025-06-19T14:30:11.093Z"
    },
    {
      "type": "debug",
      "text": "[vite] connected.",
      "timestamp": "2025-06-19T14:30:11.137Z"
    },
    {
      "type": "error",
      "text": "Failed to load resource: the server responded with a status of 500 (Internal Server Error)",
      "timestamp": "2025-06-19T14:30:11.641Z",
      "analyzed": true
    }
  ],
  "network": [
    {
      "url": "http://localhost:9999/",
      "method": "GET",
      "resourceType": "document",
      "timestamp": "2025-06-19T14:26:43.679Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.694Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/@vite/client",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.702Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/main.tsx?t=1750342206074",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.702Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/@react-refresh",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.704Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/main.tsx?t=1750342206074",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.711Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.713Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.713Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-dom_client.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.713Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-router-dom.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.714Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/App.tsx?t=1750342206074",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.714Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/index.css?t=1750342206074",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.714Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/ThemeContext.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.714Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/AudioContext.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.715Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/AccessibilityContext.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.715Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/@vite/client",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.716Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/vite/dist/client/env.mjs",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.717Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.719Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-3TFVT2CW.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.720Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4MBMRILA.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.720Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-dom_client.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.720Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-R6S4VRB5.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.721Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.722Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/@react-refresh",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.723Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/App.tsx?t=1750342206074",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.724Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toaster.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.726Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/sonner.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.726Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/tooltip.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.726Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@tanstack_react-query.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.726Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/Index.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.726Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/CreateStory.tsx?t=1750342206074",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.726Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/NotFound.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.727Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ControlPanel.tsx?t=1750342104974",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.727Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/AudioContext.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.727Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/contexts/ThemeContext.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.728Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/index.css?t=1750342206074",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.729Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/contexts/AccessibilityContext.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.730Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/configLoader.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.731Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4MBMRILA.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.731Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-router-dom.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.732Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/vite/dist/client/env.mjs",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.732Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-3TFVT2CW.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.735Z",
      "direction": "response"
    },
    {
      "type": "websocket",
      "direction": "received",
      "data": {
        "type": "connected"
      },
      "timestamp": "2025-06-19T14:26:43.737Z"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toaster.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.738Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/hooks/use-toast.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.738Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toast.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.739Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/tooltip.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.744Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-tooltip.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.745Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/lib/utils.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.745Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/sonner.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.747Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@tanstack_react-query.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.748Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/next-themes.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.749Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/sonner.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.749Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/Index.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.750Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-S77I6LSE.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.751Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Hero.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.751Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Features.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.751Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/HowItWorks.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.751Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Testimonials.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.752Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Pricing.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.752Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Footer.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.752Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ThemeToggle.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.752Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/BackgroundMusic.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.752Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/AccessibilityToggle.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.753Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/CreateStory.tsx?t=1750342206074",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.753Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/button.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.754Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/card.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.754Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/input.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.754Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/textarea.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.754Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lucide-react.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.754Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ConversationalAgent.tsx?t=1750342206074",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.755Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/NotFound.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.756Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/configLoader.ts",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.757Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toast.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.758Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/js-yaml.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.759Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/features.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.760Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/how-it-works.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.760Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/testimonials.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.760Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/waitlist.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.760Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/audio.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.760Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/hooks/use-toast.ts",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.760Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/lib/utils.ts",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.761Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-toast.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.762Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/class-variance-authority.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.763Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ControlPanel.tsx?t=1750342104974",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.763Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/clsx.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.764Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/tailwind-merge.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.764Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/popover.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.764Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-tooltip.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.765Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-LWPWBKDM.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.766Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-U4TABNJC.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.766Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4N5V6F5M.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.766Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-USKQ4M2E.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.767Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-L625H35P.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.767Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-SFRP65FH.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.767Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-FHWJGYAZ.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.767Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-67UIQOTR.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.767Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-TQG5UYZM.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.767Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Features.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.768Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/next-themes.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.769Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-S77I6LSE.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.769Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/sonner.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.770Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-R6S4VRB5.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.771Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/InteractiveFeaturesSection.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.774Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Hero.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.774Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/HowItWorks.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.775Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/magnetic-button.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.776Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/PersonalizedToggle/PersonalizedToggle.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.776Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistModal.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.776Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistCounter.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.777Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/AnimatedSlideshow.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.777Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lottie-react.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.777Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/assets/arrow-animation.json?import",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.777Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Pricing.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.777Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/Testimonials.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.779Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/BackgroundMusic.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.780Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/Footer.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.780Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/staticAssetManager.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.781Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ThemeToggle.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.781Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/AccessibilityToggle.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.782Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/slider.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.783Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/switch.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.784Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/button.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.784Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-slot.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:26:43.785Z",
      "direction": "request"
    },
    {
      "type": "websocket",
      "direction": "received",
      "data": {
        "type": "error",
        "err": {
          "message": "  × Unexpected token `div`. Expected jsx identifier\n     ╭─[C:/Users/user/IdeaProjects/mimi-dream-verse/src/components/ConversationalAgent.tsx:253:1]\n 250 │   };\n 251 │ \n 252 │   return (\n 253 │     <div className=\"space-y-6\">\n     ·      ───\n 254 │       <div className=\"text-center\">\n 255 │         <div className=\"w-48 h-48 mx-auto mb-4\">\n 255 │           <Lottie \r\n     ╰────\n\n\nCaused by:\n    Syntax Error",
          "stack": "",
          "id": "C:/Users/user/IdeaProjects/mimi-dream-verse/src/components/ConversationalAgent.tsx",
          "frame": "",
          "plugin": "vite:react-swc",
          "pluginCode": "\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useConversation } from \"@11labs/react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Mic, MicOff, MessageCircle, AlertCircle, RefreshCw } from \"lucide-react\";\r\nimport Lottie from \"lottie-react\";\r\nimport mimiAnimation from \"@/assets/animations/mimi-animation.json\";\r\n\r\ninterface ConversationalAgentProps {\r\n  onStoryRequest: (request: string) => void;\r\n}\r\n\r\nconst ConversationalAgent = ({ onStoryRequest }: ConversationalAgentProps) => {\r\n  const [storyRequest, setStoryRequest] = useState(\"\");\r\n  const [conversationId, setConversationId] = useState<string | null>(null);\r\n  const [connectionError, setConnectionError] = useState<string | null>(null);\r\n  const [isReconnecting, setIsReconnecting] = useState(false);\r\n  const reconnectTimeoutRef = useRef<number | null>(null);\r\n  const pingIntervalRef = useRef<number | null>(null);\r\n  const lastPingTimeRef = useRef<number>(0);\r\n  const reconnectAttemptsRef = useRef(0);\r\n\r\n  const conversation = useConversation({\r\n    onConnect: () => {\r\n      console.log(\"Connected to ElevenLabs agent\");\r\n      setConnectionError(null);\r\n      setIsReconnecting(false);\r\n      reconnectAttemptsRef.current = 0;\r\n      \r\n      // Setup ping interval to keep connection alive\r\n      if (pingIntervalRef.current) {\r\n        clearInterval(pingIntervalRef.current);\r\n      }\r\n      \r\n      pingIntervalRef.current = window.setInterval(() => {\r\n        lastPingTimeRef.current = Date.now();\r\n        // Check if connection is still alive\r\n        if (conversation.status === \"connected\") {\r\n          console.log(\"Ping: Connection health check\");\r\n        }\r\n      }, 30000); // Check every 30 seconds\r\n    },\r\n    onDisconnect: () => {\r\n      console.log(\"Disconnected from ElevenLabs agent\");\r\n      setConversationId(null);\r\n      \r\n      // Clear ping interval\r\n      if (pingIntervalRef.current) {\r\n        clearInterval(pingIntervalRef.current);\r\n        pingIntervalRef.current = null;\r\n      }\r\n      \r\n      // If not manually disconnected and not reconnecting, attempt to reconnect\r\n      if (!isReconnecting && reconnectAttemptsRef.current < 3) {\r\n        handleReconnect();\r\n      }\r\n    },\r\n    onMessage: (message) => {\r\n      console.log(\"Received message:\", message);\r\n      \r\n      // Handle messages according to ElevenLabs docs - be very careful not to break the flow\r\n      if (message && typeof message === 'object') {\r\n        const messageData = message as any;\r\n        \r\n        // Handle user transcription - just log, don't process\r\n        if (messageData.type === 'user_transcript') {\r\n          console.log(\"User transcript:\", messageData.user_transcript);\r\n          return;\r\n        }\r\n        \r\n        // Handle agent response - extract story requests\r\n        if (messageData.type === 'agent_response') {\r\n          console.log(\"Agent response:\", messageData.agent_response);\r\n          \r\n          const responseText = messageData.agent_response?.trim();\r\n          if (responseText && responseText.length > 30 && \r\n              !responseText.toLowerCase().includes('hi') && \r\n              !responseText.toLowerCase().includes('hello') &&\r\n              !responseText.toLowerCase().includes(\"i'm mimi\")) {\r\n            setStoryRequest(responseText);\r\n            onStoryRequest(responseText);\r\n          }\r\n          return;\r\n        }\r\n        \r\n        // Handle audio data - just log\r\n        if (messageData.type === 'audio') {\r\n          console.log(\"Audio data received\");\r\n          return;\r\n        }\r\n        \r\n        // Handle other message types without breaking flow\r\n        if (messageData.type === 'interruption') {\r\n          console.log(\"Interruption detected\");\r\n          return;\r\n        }\r\n        \r\n        if (messageData.type === 'ping' || messageData.type === 'pong') {\r\n          console.log(\"Connection health check:\", messageData.type);\r\n          return;\r\n        }\r\n        \r\n        if (messageData.type === 'error') {\r\n          console.error(\"Agent error:\", messageData.error);\r\n          return;\r\n        }\r\n        \r\n        // Handle legacy format for backward compatibility\r\n        if (messageData.source && messageData.message) {\r\n          if (messageData.source === \"user\") {\r\n            console.log(\"User message (legacy):\", messageData.message);\r\n            return;\r\n          }\r\n          \r\n          if (messageData.source === \"ai\") {\r\n            console.log(\"AI response (legacy):\", messageData.message);\r\n            const responseText = messageData.message.trim();\r\n            if (responseText.length > 30 && \r\n                !responseText.toLowerCase().includes('hi') && \r\n                !responseText.toLowerCase().includes('hello') &&\r\n                !responseText.toLowerCase().includes(\"i'm mimi\")) {\r\n              setStoryRequest(responseText);\r\n              onStoryRequest(responseText);\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        \r\n        // Log unhandled messages for debugging\r\n        console.log(\"Unhandled message type:\", messageData.type || messageData);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Conversation error:\", error);\r\n      \r\n      // Set error message for user feedback\r\n      if (typeof error === 'string') {\r\n        setConnectionError(error);\r\n      } else if (error instanceof Error) {\r\n        setConnectionError(error.message);\r\n      } else {\r\n        setConnectionError(\"An unknown error occurred with the conversation\");\r\n      }\r\n      \r\n      // Don't automatically end conversation on all errors\r\n      // Only attempt reconnect for connection-related errors\r\n      if (error && (error.toString().includes('WebSocket') || \r\n                   error.toString().includes('connection') || \r\n                   error.toString().includes('network'))) {\r\n        handleReconnect();\r\n      }\r\n    }\r\n  });\r\n\r\n  // Handle reconnection logic\r\n  const handleReconnect = () => {\r\n    setIsReconnecting(true);\r\n    reconnectAttemptsRef.current += 1;\r\n    \r\n    console.log(`Attempting to reconnect (attempt ${reconnectAttemptsRef.current}/3)...`);\r\n    \r\n    // Clear any existing timeout\r\n    if (reconnectTimeoutRef.current) {\r\n      window.clearTimeout(reconnectTimeoutRef.current);\r\n    }\r\n    \r\n    // Exponential backoff for reconnection attempts\r\n    const backoffTime = Math.min(1000 * Math.pow(2, reconnectAttemptsRef.current), 10000);\r\n    \r\n    reconnectTimeoutRef.current = window.setTimeout(async () => {\r\n      try {\r\n        if (reconnectAttemptsRef.current <= 3) {\r\n          await handleStartConversation(true);\r\n        } else {\r\n          setIsReconnecting(false);\r\n          setConnectionError(\"Failed to reconnect after multiple attempts. Please try again later.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Reconnection failed:\", error);\r\n        setConnectionError(\"Failed to reconnect. Please try again manually.\");\r\n        setIsReconnecting(false);\r\n      }\r\n    }, backoffTime);\r\n  };\r\n\r\n  // Cleanup function for all timers and intervals\r\n  useEffect(() => {\r\n    return () => {\r\n      if (reconnectTimeoutRef.current) {\r\n        window.clearTimeout(reconnectTimeoutRef.current);\r\n      }\r\n      if (pingIntervalRef.current) {\r\n        window.clearInterval(pingIntervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleStartConversation = async (isReconnect = false) => {\r\n    try {\r\n      setConnectionError(null);\r\n      if (!isReconnect) {\r\n        setIsReconnecting(false);\r\n        reconnectAttemptsRef.current = 0;\r\n      }\r\n      \r\n      // Request microphone access first\r\n      await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      \r\n      // Start conversation with proper agent ID\r\n      const sessionId = await conversation.startSession({ \r\n        agentId: \"agent_01jxsmn9d5fr8arzbsy2cgbbt0\",\r\n        // Add connection timeout to prevent hanging connections\r\n        timeout: 10000 // 10 seconds timeout\r\n      });\r\n      \r\n      setConversationId(sessionId);\r\n      console.log(\"Conversation started with ID:\", sessionId);\r\n    } catch (error) {\r\n      console.error(\"Failed to start conversation:\", error);\r\n      setConnectionError(\"Failed to start conversation. Please check your microphone permissions and try again.\");\r\n      setIsReconnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleEndConversation = async () => {\r\n    try {\r\n      // Clear reconnection attempts and timers\r\n      if (reconnectTimeoutRef.current) {\r\n        window.clearTimeout(reconnectTimeoutRef.current);\r\n        reconnectTimeoutRef.current = null;\r\n      }\r\n      if (pingIntervalRef.current) {\r\n        window.clearInterval(pingIntervalRef.current);\r\n        pingIntervalRef.current = null;\r\n      }\r\n      \r\n      setIsReconnecting(false);\r\n      reconnectAttemptsRef.current = 0;\r\n      \r\n      await conversation.endSession();\r\n      setConversationId(null);\r\n      setStoryRequest(\"\");\r\n      setConnectionError(null);\r\n    } catch (error) {\r\n      console.error(\"Failed to end conversation:\", error);\r\n      // Force reset the state even if the endSession call fails\r\n      setConversationId(null);\r\n      setIsReconnecting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <div className=\"w-48 h-48 mx-auto mb-4\">\r\n          <Lottie \r\n            animationData={mimiAnimation} \r\n            loop={true}\r\n            autoplay={true}\r\n            className={`transition-transform duration-300 ${\r\n              conversation.isSpeaking \r\n                ? \"animate-pulse scale-110\" \r\n                : conversation.status === \"connected\" \r\n                ? \"scale-105\" \r\n                : \"scale-100\"\r\n            }`}\r\n          />\r\n        </div>\r\n        <h3 className=\"text-xl font-semibold mb-2\">\r\n          {conversation.status === \"connected\" ? \"Mimi is listening...\" : \"Talk to Mimi\"}\r\n        </h3>\r\n        <p className=\"text-gray-600 dark:text-gray-300 text-sm\">\r\n          Tell Mimi what kind of story you'd like to hear\r\n        </p>\r\n        {conversationId && (\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            Session ID: {conversationId}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex justify-center gap-4\">\r\n        {conversation.status === \"disconnected\" ? (\r\n          <Button\r\n            onClick={() => handleStartConversation(false)}\r\n            className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 flex items-center gap-2\"\r\n            disabled={isReconnecting}\r\n          >\r\n            {isReconnecting ? (\r\n              <>\r\n                <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n                Reconnecting...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MessageCircle className=\"w-4 h-4\" />\r\n                Start Conversation\r\n              </>\r\n            )}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={handleEndConversation}\r\n            variant=\"destructive\"\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <MicOff className=\"w-4 h-4\" />\r\n            End Conversation\r\n          </Button>\r\n        )}\r\n      </div>\r\n      \r\n      {connectionError && (\r\n        <div className=\"p-4 bg-red-50 dark:bg-red-900/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <AlertCircle className=\"w-4 h-4 text-red-600\" />\r\n            <span className=\"text-red-600 dark:text-red-400 font-medium\">\r\n              Connection Error\r\n            </span>\r\n          </div>\r\n          <p className=\"text-sm text-red-600 dark:text-red-400\">\r\n            {connectionError}\r\n          </p>\r\n          <Button \r\n            variant=\"outline\" \r\n            size=\"sm\" \r\n            className=\"mt-2 text-red-600 border-red-200 hover:bg-red-50\"\r\n            onClick={() => handleStartConversation(false)}\r\n            disabled={isReconnecting}\r\n          >\r\n            Try Again\r\n          </Button>\r\n        </div>\r\n      )\r\n\r\n      {conversation.status === \"connected\" && (\r\n        <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Mic className=\"w-4 h-4 text-green-600\" />\r\n            <span className=\"text-green-600 dark:text-green-400 font-medium\">\r\n              Connected - Speak now!\r\n            </span>\r\n          </div>\r\n          {conversation.isSpeaking && (\r\n            <p className=\"text-sm text-green-600 dark:text-green-400\">\r\n              Mimi is speaking...\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {storyRequest && (\r\n        <div className=\"p-4 bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-lg\">\r\n          <h4 className=\"font-medium mb-2\">Story Request Captured:</h4>\r\n          <p className=\"text-sm text-gray-700 dark:text-gray-300 italic\">\r\n            \"{storyRequest}\"\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg text-sm\">\r\n        <p className=\"text-blue-700 dark:text-blue-300\">\r\n          💡 <strong>Tip:</strong> Just speak naturally! Ask for any kind of story - adventures, fairy tales, educational stories, or anything you can imagine.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationalAgent;\r\n",
          "loc": {
            "file": "C:/Users/user/IdeaProjects/mimi-dream-verse/src/components/ConversationalAgent.tsx",
            "line": "253",
            "column": "1"
          }
        }
      },
      "timestamp": "2025-06-19T14:26:43.786Z"
    },
    {
      "url": "http://localhost:9999/src/components/ui/card.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.786Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ConversationalAgent.tsx?t=1750342206074",
      "status": 500,
      "timestamp": "2025-06-19T14:26:43.788Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/input.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.789Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/textarea.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.809Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/js-yaml.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.811Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/how-it-works.yaml?import&raw",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.812Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/features.yaml?import&raw",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.812Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/testimonials.yaml?import&raw",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.814Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/waitlist.yaml?import&raw",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.814Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/audio.yaml?import&raw",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.815Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/class-variance-authority.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.816Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/clsx.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.817Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-LWPWBKDM.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.818Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-toast.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.818Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/popover.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.819Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-USKQ4M2E.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.820Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-FHWJGYAZ.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.821Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-SFRP65FH.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.821Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/tailwind-merge.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.822Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4N5V6F5M.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.823Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-U4TABNJC.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.824Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-L625H35P.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.824Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-67UIQOTR.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.826Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-TQG5UYZM.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.826Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/InteractiveFeaturesSection.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.827Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/magnetic-button.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.827Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/PersonalizedToggle/PersonalizedToggle.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.829Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/favicon.ico",
      "method": "GET",
      "resourceType": "other",
      "timestamp": "2025-06-19T14:26:43.830Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistModal.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.831Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistCounter.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.831Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/assets/arrow-animation.json?import",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.833Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lucide-react.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.834Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/staticAssetManager.ts",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.836Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/favicon.ico",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.837Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/switch.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.837Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/AnimatedSlideshow.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.838Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-slot.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.838Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/slider.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.839Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lottie-react.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:26:43.848Z",
      "direction": "response"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:27:13.742Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:27:43.749Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:28:13.749Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:28:43.738Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:29:13.748Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:29:43.750Z"
    },
    {
      "url": "http://localhost:9999/",
      "method": "GET",
      "resourceType": "fetch",
      "timestamp": "2025-06-19T14:30:06.841Z",
      "direction": "request"
    },
    {
      "type": "websocket",
      "event": "closed",
      "timestamp": "2025-06-19T14:30:06.841Z"
    },
    {
      "url": "http://localhost:9999/",
      "method": "GET",
      "resourceType": "fetch",
      "timestamp": "2025-06-19T14:30:10.144Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/",
      "status": 204,
      "timestamp": "2025-06-19T14:30:10.975Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/",
      "method": "GET",
      "resourceType": "document",
      "timestamp": "2025-06-19T14:30:10.978Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.007Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/@vite/client",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.016Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/main.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.016Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/@react-refresh",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.017Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/@react-refresh",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.052Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/main.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.060Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.063Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.064Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.064Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.064Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-dom_client.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.065Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-dom_client.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.065Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-router-dom.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.065Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/react-router-dom.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.065Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/App.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.066Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/index.css",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.066Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/ThemeContext.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.066Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/AudioContext.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.066Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/AccessibilityContext.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.066Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-3TFVT2CW.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.068Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-3TFVT2CW.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.068Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4MBMRILA.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.069Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4MBMRILA.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.069Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-R6S4VRB5.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.073Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-R6S4VRB5.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.074Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/@vite/client",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.074Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/vite/dist/client/env.mjs",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.075Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/ThemeContext.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.079Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/App.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.085Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toaster.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.088Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/sonner.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.088Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/tooltip.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.088Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@tanstack_react-query.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.088Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@tanstack_react-query.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.089Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/pages/Index.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.089Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/CreateStory.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.090Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/NotFound.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.090Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ControlPanel.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.090Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/contexts/AudioContext.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.091Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/contexts/AccessibilityContext.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.091Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-S77I6LSE.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.091Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-S77I6LSE.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.091Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/configLoader.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.092Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/vite/dist/client/env.mjs",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.092Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/tooltip.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.108Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-tooltip.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.109Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-tooltip.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.109Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/lib/utils.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.109Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-LWPWBKDM.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.112Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-LWPWBKDM.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.112Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-U4TABNJC.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.112Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-U4TABNJC.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.112Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4N5V6F5M.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.113Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-4N5V6F5M.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.113Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-USKQ4M2E.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.113Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-USKQ4M2E.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.113Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-L625H35P.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.114Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-L625H35P.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.114Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-SFRP65FH.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.114Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-SFRP65FH.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.114Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-FHWJGYAZ.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.115Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-FHWJGYAZ.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.115Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-67UIQOTR.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.115Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-67UIQOTR.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.115Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-TQG5UYZM.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.116Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-TQG5UYZM.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.116Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/sonner.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.118Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/next-themes.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.118Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/next-themes.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.119Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/sonner.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.119Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/sonner.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.119Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toaster.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.120Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/hooks/use-toast.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.121Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toast.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.121Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/CreateStory.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.122Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/button.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.133Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/card.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.133Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/input.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.134Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/textarea.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.134Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lucide-react.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.134Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lucide-react.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.134Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ThemeToggle.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.134Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ConversationalAgent.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.135Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/pages/Index.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.136Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/pages/NotFound.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.136Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/configLoader.ts",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.136Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ControlPanel.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.137Z",
      "direction": "response"
    },
    {
      "type": "websocket",
      "direction": "received",
      "data": {
        "type": "connected"
      },
      "timestamp": "2025-06-19T14:30:11.137Z"
    },
    {
      "url": "http://localhost:9999/src/components/Hero.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Features.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/HowItWorks.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Testimonials.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Pricing.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Footer.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/BackgroundMusic.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.138Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/AccessibilityToggle.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.139Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/lib/utils.ts",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.139Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/js-yaml.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.139Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/js-yaml.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.139Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/features.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.140Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/how-it-works.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.140Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/testimonials.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.140Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/waitlist.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.140Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/audio.yaml?import&raw",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.140Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/popover.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.140Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/clsx.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.141Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/clsx.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.141Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/tailwind-merge.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.141Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/tailwind-merge.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.141Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-U7P2NEEE.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.141Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/button.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.145Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-slot.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.146Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-slot.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.146Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/class-variance-authority.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.146Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/class-variance-authority.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.146Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/toast.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.153Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-toast.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.154Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-toast.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.154Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-FIACSFZ6.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.155Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/hooks/use-toast.ts",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.280Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/card.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.293Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/input.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.302Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/textarea.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.303Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ThemeToggle.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.303Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/Hero.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.308Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/Features.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.309Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/HowItWorks.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.310Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/magnetic-button.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.311Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/PersonalizedToggle/PersonalizedToggle.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.311Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistModal.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.311Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistCounter.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.312Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Testimonials.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.312Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/InteractiveFeaturesSection.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.312Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/AnimatedSlideshow.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.319Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lottie-react.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.319Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/lottie-react.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.319Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/assets/arrow-animation.json?import",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.319Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/Pricing.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.320Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/Footer.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.320Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/how-it-works.yaml?import&raw",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.321Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/BackgroundMusic.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.321Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/staticAssetManager.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.322Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/index.css",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.607Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/AccessibilityToggle.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.623Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/features.yaml?import&raw",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.624Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/slider.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.624Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/switch.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.624Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/data/waitlist.yaml?import&raw",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.625Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/testimonials.yaml?import&raw",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.625Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/data/audio.yaml?import&raw",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.630Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/popover.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.632Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-popover.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.634Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/magnetic-button.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.634Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-U7P2NEEE.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.635Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/PersonalizedToggle/PersonalizedToggle.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.636Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/tabs.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.637Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/PersonalizedToggle/TabContent.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.637Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistModal.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.637Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/dialog.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.638Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/ui/select.tsx",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.638Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/node_modules/@lottiefiles/dotlottie-react/dist/browser/index.js?v=abe2a901",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.638Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/services/waitlistService.ts",
      "method": "GET",
      "resourceType": "script",
      "timestamp": "2025-06-19T14:30:11.638Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/WaitlistCounter.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.639Z",
      "direction": "response"
    },
    {
      "type": "websocket",
      "direction": "received",
      "data": {
        "type": "error",
        "err": {
          "message": "  × Unexpected token `div`. Expected jsx identifier\n     ╭─[C:/Users/user/IdeaProjects/mimi-dream-verse/src/components/ConversationalAgent.tsx:253:1]\n 250 │   };\n 251 │ \n 252 │   return (\n 253 │     <div className=\"space-y-6\">\n     ·      ───\n 254 │       <div className=\"text-center\">\n 255 │         <div className=\"w-48 h-48 mx-auto mb-4\">\n 255 │           <Lottie \r\n     ╰────\n\n\nCaused by:\n    Syntax Error",
          "stack": "",
          "id": "C:/Users/user/IdeaProjects/mimi-dream-verse/src/components/ConversationalAgent.tsx",
          "frame": "",
          "plugin": "vite:react-swc",
          "pluginCode": "\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useConversation } from \"@11labs/react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Mic, MicOff, MessageCircle, AlertCircle, RefreshCw } from \"lucide-react\";\r\nimport Lottie from \"lottie-react\";\r\nimport mimiAnimation from \"@/assets/animations/mimi-animation.json\";\r\n\r\ninterface ConversationalAgentProps {\r\n  onStoryRequest: (request: string) => void;\r\n}\r\n\r\nconst ConversationalAgent = ({ onStoryRequest }: ConversationalAgentProps) => {\r\n  const [storyRequest, setStoryRequest] = useState(\"\");\r\n  const [conversationId, setConversationId] = useState<string | null>(null);\r\n  const [connectionError, setConnectionError] = useState<string | null>(null);\r\n  const [isReconnecting, setIsReconnecting] = useState(false);\r\n  const reconnectTimeoutRef = useRef<number | null>(null);\r\n  const pingIntervalRef = useRef<number | null>(null);\r\n  const lastPingTimeRef = useRef<number>(0);\r\n  const reconnectAttemptsRef = useRef(0);\r\n\r\n  const conversation = useConversation({\r\n    onConnect: () => {\r\n      console.log(\"Connected to ElevenLabs agent\");\r\n      setConnectionError(null);\r\n      setIsReconnecting(false);\r\n      reconnectAttemptsRef.current = 0;\r\n      \r\n      // Setup ping interval to keep connection alive\r\n      if (pingIntervalRef.current) {\r\n        clearInterval(pingIntervalRef.current);\r\n      }\r\n      \r\n      pingIntervalRef.current = window.setInterval(() => {\r\n        lastPingTimeRef.current = Date.now();\r\n        // Check if connection is still alive\r\n        if (conversation.status === \"connected\") {\r\n          console.log(\"Ping: Connection health check\");\r\n        }\r\n      }, 30000); // Check every 30 seconds\r\n    },\r\n    onDisconnect: () => {\r\n      console.log(\"Disconnected from ElevenLabs agent\");\r\n      setConversationId(null);\r\n      \r\n      // Clear ping interval\r\n      if (pingIntervalRef.current) {\r\n        clearInterval(pingIntervalRef.current);\r\n        pingIntervalRef.current = null;\r\n      }\r\n      \r\n      // If not manually disconnected and not reconnecting, attempt to reconnect\r\n      if (!isReconnecting && reconnectAttemptsRef.current < 3) {\r\n        handleReconnect();\r\n      }\r\n    },\r\n    onMessage: (message) => {\r\n      console.log(\"Received message:\", message);\r\n      \r\n      // Handle messages according to ElevenLabs docs - be very careful not to break the flow\r\n      if (message && typeof message === 'object') {\r\n        const messageData = message as any;\r\n        \r\n        // Handle user transcription - just log, don't process\r\n        if (messageData.type === 'user_transcript') {\r\n          console.log(\"User transcript:\", messageData.user_transcript);\r\n          return;\r\n        }\r\n        \r\n        // Handle agent response - extract story requests\r\n        if (messageData.type === 'agent_response') {\r\n          console.log(\"Agent response:\", messageData.agent_response);\r\n          \r\n          const responseText = messageData.agent_response?.trim();\r\n          if (responseText && responseText.length > 30 && \r\n              !responseText.toLowerCase().includes('hi') && \r\n              !responseText.toLowerCase().includes('hello') &&\r\n              !responseText.toLowerCase().includes(\"i'm mimi\")) {\r\n            setStoryRequest(responseText);\r\n            onStoryRequest(responseText);\r\n          }\r\n          return;\r\n        }\r\n        \r\n        // Handle audio data - just log\r\n        if (messageData.type === 'audio') {\r\n          console.log(\"Audio data received\");\r\n          return;\r\n        }\r\n        \r\n        // Handle other message types without breaking flow\r\n        if (messageData.type === 'interruption') {\r\n          console.log(\"Interruption detected\");\r\n          return;\r\n        }\r\n        \r\n        if (messageData.type === 'ping' || messageData.type === 'pong') {\r\n          console.log(\"Connection health check:\", messageData.type);\r\n          return;\r\n        }\r\n        \r\n        if (messageData.type === 'error') {\r\n          console.error(\"Agent error:\", messageData.error);\r\n          return;\r\n        }\r\n        \r\n        // Handle legacy format for backward compatibility\r\n        if (messageData.source && messageData.message) {\r\n          if (messageData.source === \"user\") {\r\n            console.log(\"User message (legacy):\", messageData.message);\r\n            return;\r\n          }\r\n          \r\n          if (messageData.source === \"ai\") {\r\n            console.log(\"AI response (legacy):\", messageData.message);\r\n            const responseText = messageData.message.trim();\r\n            if (responseText.length > 30 && \r\n                !responseText.toLowerCase().includes('hi') && \r\n                !responseText.toLowerCase().includes('hello') &&\r\n                !responseText.toLowerCase().includes(\"i'm mimi\")) {\r\n              setStoryRequest(responseText);\r\n              onStoryRequest(responseText);\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        \r\n        // Log unhandled messages for debugging\r\n        console.log(\"Unhandled message type:\", messageData.type || messageData);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Conversation error:\", error);\r\n      \r\n      // Set error message for user feedback\r\n      if (typeof error === 'string') {\r\n        setConnectionError(error);\r\n      } else if (error instanceof Error) {\r\n        setConnectionError(error.message);\r\n      } else {\r\n        setConnectionError(\"An unknown error occurred with the conversation\");\r\n      }\r\n      \r\n      // Don't automatically end conversation on all errors\r\n      // Only attempt reconnect for connection-related errors\r\n      if (error && (error.toString().includes('WebSocket') || \r\n                   error.toString().includes('connection') || \r\n                   error.toString().includes('network'))) {\r\n        handleReconnect();\r\n      }\r\n    }\r\n  });\r\n\r\n  // Handle reconnection logic\r\n  const handleReconnect = () => {\r\n    setIsReconnecting(true);\r\n    reconnectAttemptsRef.current += 1;\r\n    \r\n    console.log(`Attempting to reconnect (attempt ${reconnectAttemptsRef.current}/3)...`);\r\n    \r\n    // Clear any existing timeout\r\n    if (reconnectTimeoutRef.current) {\r\n      window.clearTimeout(reconnectTimeoutRef.current);\r\n    }\r\n    \r\n    // Exponential backoff for reconnection attempts\r\n    const backoffTime = Math.min(1000 * Math.pow(2, reconnectAttemptsRef.current), 10000);\r\n    \r\n    reconnectTimeoutRef.current = window.setTimeout(async () => {\r\n      try {\r\n        if (reconnectAttemptsRef.current <= 3) {\r\n          await handleStartConversation(true);\r\n        } else {\r\n          setIsReconnecting(false);\r\n          setConnectionError(\"Failed to reconnect after multiple attempts. Please try again later.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Reconnection failed:\", error);\r\n        setConnectionError(\"Failed to reconnect. Please try again manually.\");\r\n        setIsReconnecting(false);\r\n      }\r\n    }, backoffTime);\r\n  };\r\n\r\n  // Cleanup function for all timers and intervals\r\n  useEffect(() => {\r\n    return () => {\r\n      if (reconnectTimeoutRef.current) {\r\n        window.clearTimeout(reconnectTimeoutRef.current);\r\n      }\r\n      if (pingIntervalRef.current) {\r\n        window.clearInterval(pingIntervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleStartConversation = async (isReconnect = false) => {\r\n    try {\r\n      setConnectionError(null);\r\n      if (!isReconnect) {\r\n        setIsReconnecting(false);\r\n        reconnectAttemptsRef.current = 0;\r\n      }\r\n      \r\n      // Request microphone access first\r\n      await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      \r\n      // Start conversation with proper agent ID\r\n      const sessionId = await conversation.startSession({ \r\n        agentId: \"agent_01jxsmn9d5fr8arzbsy2cgbbt0\",\r\n        // Add connection timeout to prevent hanging connections\r\n        timeout: 10000 // 10 seconds timeout\r\n      });\r\n      \r\n      setConversationId(sessionId);\r\n      console.log(\"Conversation started with ID:\", sessionId);\r\n    } catch (error) {\r\n      console.error(\"Failed to start conversation:\", error);\r\n      setConnectionError(\"Failed to start conversation. Please check your microphone permissions and try again.\");\r\n      setIsReconnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleEndConversation = async () => {\r\n    try {\r\n      // Clear reconnection attempts and timers\r\n      if (reconnectTimeoutRef.current) {\r\n        window.clearTimeout(reconnectTimeoutRef.current);\r\n        reconnectTimeoutRef.current = null;\r\n      }\r\n      if (pingIntervalRef.current) {\r\n        window.clearInterval(pingIntervalRef.current);\r\n        pingIntervalRef.current = null;\r\n      }\r\n      \r\n      setIsReconnecting(false);\r\n      reconnectAttemptsRef.current = 0;\r\n      \r\n      await conversation.endSession();\r\n      setConversationId(null);\r\n      setStoryRequest(\"\");\r\n      setConnectionError(null);\r\n    } catch (error) {\r\n      console.error(\"Failed to end conversation:\", error);\r\n      // Force reset the state even if the endSession call fails\r\n      setConversationId(null);\r\n      setIsReconnecting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <div className=\"w-48 h-48 mx-auto mb-4\">\r\n          <Lottie \r\n            animationData={mimiAnimation} \r\n            loop={true}\r\n            autoplay={true}\r\n            className={`transition-transform duration-300 ${\r\n              conversation.isSpeaking \r\n                ? \"animate-pulse scale-110\" \r\n                : conversation.status === \"connected\" \r\n                ? \"scale-105\" \r\n                : \"scale-100\"\r\n            }`}\r\n          />\r\n        </div>\r\n        <h3 className=\"text-xl font-semibold mb-2\">\r\n          {conversation.status === \"connected\" ? \"Mimi is listening...\" : \"Talk to Mimi\"}\r\n        </h3>\r\n        <p className=\"text-gray-600 dark:text-gray-300 text-sm\">\r\n          Tell Mimi what kind of story you'd like to hear\r\n        </p>\r\n        {conversationId && (\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            Session ID: {conversationId}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex justify-center gap-4\">\r\n        {conversation.status === \"disconnected\" ? (\r\n          <Button\r\n            onClick={() => handleStartConversation(false)}\r\n            className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 flex items-center gap-2\"\r\n            disabled={isReconnecting}\r\n          >\r\n            {isReconnecting ? (\r\n              <>\r\n                <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n                Reconnecting...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MessageCircle className=\"w-4 h-4\" />\r\n                Start Conversation\r\n              </>\r\n            )}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={handleEndConversation}\r\n            variant=\"destructive\"\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <MicOff className=\"w-4 h-4\" />\r\n            End Conversation\r\n          </Button>\r\n        )}\r\n      </div>\r\n      \r\n      {connectionError && (\r\n        <div className=\"p-4 bg-red-50 dark:bg-red-900/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <AlertCircle className=\"w-4 h-4 text-red-600\" />\r\n            <span className=\"text-red-600 dark:text-red-400 font-medium\">\r\n              Connection Error\r\n            </span>\r\n          </div>\r\n          <p className=\"text-sm text-red-600 dark:text-red-400\">\r\n            {connectionError}\r\n          </p>\r\n          <Button \r\n            variant=\"outline\" \r\n            size=\"sm\" \r\n            className=\"mt-2 text-red-600 border-red-200 hover:bg-red-50\"\r\n            onClick={() => handleStartConversation(false)}\r\n            disabled={isReconnecting}\r\n          >\r\n            Try Again\r\n          </Button>\r\n        </div>\r\n      )\r\n\r\n      {conversation.status === \"connected\" && (\r\n        <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Mic className=\"w-4 h-4 text-green-600\" />\r\n            <span className=\"text-green-600 dark:text-green-400 font-medium\">\r\n              Connected - Speak now!\r\n            </span>\r\n          </div>\r\n          {conversation.isSpeaking && (\r\n            <p className=\"text-sm text-green-600 dark:text-green-400\">\r\n              Mimi is speaking...\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {storyRequest && (\r\n        <div className=\"p-4 bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-lg\">\r\n          <h4 className=\"font-medium mb-2\">Story Request Captured:</h4>\r\n          <p className=\"text-sm text-gray-700 dark:text-gray-300 italic\">\r\n            \"{storyRequest}\"\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg text-sm\">\r\n        <p className=\"text-blue-700 dark:text-blue-300\">\r\n          💡 <strong>Tip:</strong> Just speak naturally! Ask for any kind of story - adventures, fairy tales, educational stories, or anything you can imagine.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationalAgent;\r\n",
          "loc": {
            "file": "C:/Users/user/IdeaProjects/mimi-dream-verse/src/components/ConversationalAgent.tsx",
            "line": "253",
            "column": "1"
          }
        }
      },
      "timestamp": "2025-06-19T14:30:11.640Z"
    },
    {
      "url": "http://localhost:9999/src/components/ConversationalAgent.tsx",
      "status": 500,
      "timestamp": "2025-06-19T14:30:11.641Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/chunk-FIACSFZ6.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.642Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/favicon.ico",
      "method": "GET",
      "resourceType": "other",
      "timestamp": "2025-06-19T14:30:11.644Z",
      "direction": "request"
    },
    {
      "url": "http://localhost:9999/src/components/InteractiveFeaturesSection.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.644Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/assets/arrow-animation.json?import",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.644Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/AnimatedSlideshow.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.645Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/utils/staticAssetManager.ts",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.656Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/switch.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.657Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/.vite/deps/@radix-ui_react-popover.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.657Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/slider.tsx",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.658Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/tabs.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.663Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/PersonalizedToggle/TabContent.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.664Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/dialog.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.665Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/components/ui/select.tsx",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.666Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/src/services/waitlistService.ts",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.666Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/favicon.ico",
      "status": 304,
      "timestamp": "2025-06-19T14:30:11.667Z",
      "direction": "response"
    },
    {
      "url": "http://localhost:9999/node_modules/@lottiefiles/dotlottie-react/dist/browser/index.js?v=abe2a901",
      "status": 200,
      "timestamp": "2025-06-19T14:30:11.703Z",
      "direction": "response"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:30:41.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:31:11.139Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:31:41.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:32:11.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:32:41.136Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:33:11.151Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:33:41.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:34:11.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:34:41.138Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:35:11.145Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:35:41.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:36:11.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:36:41.146Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:37:11.147Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:37:41.151Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:38:11.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:38:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:39:11.136Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:39:41.144Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:40:11.145Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:40:41.137Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:41:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:41:41.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:42:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:42:41.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:43:11.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:43:41.147Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:44:11.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:44:41.146Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:45:11.146Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:45:41.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:46:11.138Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:46:41.138Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:47:11.151Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:47:41.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:48:11.139Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:48:41.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:49:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:49:41.137Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:50:11.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:50:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:51:11.138Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:51:41.147Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:52:11.147Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:52:41.150Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:53:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:53:41.150Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:54:11.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:54:41.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:55:11.144Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:55:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:56:11.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:56:41.150Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:57:11.138Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:57:41.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:58:11.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:58:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:59:11.137Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T14:59:41.135Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:00:11.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:00:41.144Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:01:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:01:41.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:02:11.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:02:41.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:03:11.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:03:41.144Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:04:11.138Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:04:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:05:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:05:41.148Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:06:11.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:06:41.144Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:07:11.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:07:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:08:11.151Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:08:41.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:09:11.146Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:09:41.140Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:10:11.148Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:10:41.145Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:11:11.149Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:11:41.148Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:12:11.143Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:12:41.142Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:13:11.141Z"
    },
    {
      "type": "websocket",
      "direction": "sent",
      "data": {
        "type": "ping"
      },
      "timestamp": "2025-06-19T15:13:41.147Z"
    }
  ],
  "errors": [
    {
      "type": "network",
      "text": "Failed request to http://localhost:9999/src/components/ConversationalAgent.tsx?t=1750342206074 with status 500",
      "timestamp": "2025-06-19T14:26:43.788Z",
      "analyzed": true
    },
    {
      "type": "error",
      "text": "Failed to load resource: the server responded with a status of 500 (Internal Server Error)",
      "timestamp": "2025-06-19T14:26:43.788Z",
      "analyzed": true
    },
    {
      "type": "websocket",
      "text": "WebSocket connection closed unexpectedly",
      "timestamp": "2025-06-19T14:30:06.841Z",
      "analyzed": true,
      "sourceFile": "C:\\Users\\user\\IdeaProjects\\mimi-dream-verse\\src\\components\\ConversationalAgent.tsx",
      "matchedPattern": "WebSocket connection closed unexpectedly"
    },
    {
      "type": "error",
      "text": "Failed to load resource: net::ERR_CONNECTION_REFUSED",
      "timestamp": "2025-06-19T14:30:09.139Z",
      "analyzed": true
    },
    {
      "type": "network",
      "text": "Failed request to http://localhost:9999/src/components/ConversationalAgent.tsx with status 500",
      "timestamp": "2025-06-19T14:30:11.641Z",
      "analyzed": true
    },
    {
      "type": "error",
      "text": "Failed to load resource: the server responded with a status of 500 (Internal Server Error)",
      "timestamp": "2025-06-19T14:30:11.641Z",
      "analyzed": true
    }
  ],
  "warnings": [],
  "fixes": []
}